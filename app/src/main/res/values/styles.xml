<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="android:windowIsTranslucent">true</item>
        <!--<item name="android:windowBackground">@android:color/transparent</item>-->
        <!-- 可以设置window的执行动画 因为每一个activity及fragment 都是持有一个window的 所以 针对window做处理动画 是可以控制activity及fragment的入和出 -->
        <!-- 设置windowStyle时 有两种方式 一种是activityAnimation，一种是windowAnimation -->
        <!-- 当activity 设置成  android:windowIsTranslucent=true时，给Activity设置ActivityAnimation会不起作用，只能设置windowAnimation -->
        <item name="android:windowAnimationStyle">@style/anim_activity</item>
    </style>

    <style name="CommonDialogStyle" parent="Theme.AppCompat.Light.Dialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <!--<item name="android:windowBackground">@drawable/dialog_custom_bg</item>-->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!--<item name="android:backgroundDimEnabled">false</item>-->
    </style>

    <!-- 设置写故事dialog弹出，退出动画 -->
    <style name="EditorDialog" mce_bogus="1" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/dialog_enter_anim</item>
        <item name="android:windowExitAnimation">@anim/dialog_exit_anim</item>
    </style>

    <style name="album_dialog" parent="Theme.AppCompat.Dialog">
        <!--是否悬浮在activity上-->
        <item name="android:windowIsFloating">true</item>
        <!--透明是否-->
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:background">#82858b</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowAnimationStyle">@style/animation_style</item>
    </style>
    <!--给dialog添加的动画效果,可选-->
    <style name="animation_style" parent="Animation.AppCompat.Dialog">
        <item name="android:windowEnterAnimation">@anim/dialog_enter_anim</item>
        <item name="android:windowExitAnimation">@anim/dialog_exit_anim</item>
    </style>

    <style name="DialogTransparent" parent="@style/Theme.AppCompat.Dialog">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowAnimationStyle">@android:style/Animation</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowIsFloating">false</item>
        <item name="android:windowIsTranslucent">true</item>
    </style>

    <style name="ActivityTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <item name="android:windowIsTranslucent">true</item>
    </style>

    <!-- activity的退出的动画处理 可以连接用户的侧滑退出的效果 类似苹果的侧滑删除一样 -->
    <style name="anim_activity" mce_bogus="1" parent="@android:style/Animation.Activity">
        <item name="android:activityOpenEnterAnimation">@anim/activity_open_in_anim</item>
        <item name="android:activityOpenExitAnimation">@anim/activity_open_out_anim</item>
        <item name="android:activityCloseEnterAnimation">@anim/activity_close_in_anim</item>
        <item name="android:activityCloseExitAnimation">@anim/activity_close_out_anim</item>
    </style>

    <style name="slideStyle">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsTranslucent">true</item>
    </style>
</resources>
