apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion HsCompileSdkVersion
    buildToolsVersion HsBuildToolsVersion
    defaultConfig {
        applicationId "com.example.wuzp.secondworld"
        minSdkVersion HsMinSdkVersion
        targetSdkVersion HsTargetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file('deploy/keystore.jks')
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            v2SigningEnabled false
        }
        debug {
            storeFile file('deploy/keystore.jks')
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {
        //build 的类型 release 和 debug
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            //os库只选择支持arm平台 x86 及其他平台可以忽略
            ndk {
                abiFilters "armeabi-v7a"
            }
        }

        //debug的时候可以向buildConfig中写入自己定义的数据
        debug{
            buildConfigField "String","BASE_URL","\"http://www.test.com/\""
            buildConfigField "int","DATE","20160701"
            signingConfig signingConfigs.debug
        }
    }
    //打开DataBinding的开关
    dataBinding {
        enabled true
    }

    lintOptions {
        // true--关闭lint报告的分析进度
        quiet true
        // true--错误发生后停止gradle构建
        abortOnError false
        // true--只报告error
        ignoreWarnings true
        // true--忽略有错误的文件的全/绝对路径(默认是true)
        //absolutePaths true
        // true--检查所有问题点，包含其他默认关闭项
        checkAllWarnings true
        // true--所有warning当做error
        warningsAsErrors true
        // 关闭指定问题检查
        disable 'TypographyFractions','TypographyQuotes'
        // 打开指定问题检查
        enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
        // 仅检查指定问题
        check 'NewApi', 'InlinedApi'
        // true--error输出文件不包含源码行号
        noLines true
        // true--显示错误的所有发生位置，不截取
        showAll true
        // 回退lint设置(默认规则)
        lintConfig file("default-lint.xml")
        // true--生成txt格式报告(默认false)
        textReport true
        // 重定向输出；可以是文件或'stdout'
        textOutput 'stdout'
        // true--生成XML格式报告
        xmlReport false
        // 指定xml报告文档(默认lint-results.xml)
        xmlOutput file("lint-report.xml")
        // true--生成HTML报告(带问题解释，源码位置，等)
        htmlReport true
        // html报告可选路径(构建器默认是lint-results.html )
        htmlOutput file("lint-report.html")
        //  true--所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
        checkReleaseBuilds true
        // 在发布版本编译时检查(即使不包含lint目标)，指定问题的规则生成崩溃
        fatal 'NewApi', 'InlineApi'
        // 指定问题的规则生成错误
        error 'Wakelock', 'TextViewEdits'
        // 指定问题的规则生成警告
        warning 'ResourceAsColor'
        // 忽略指定问题的规则(同关闭检查)
        ignore 'TypographyQuotes'
    }

    // 也不知道这货是干嘛的
    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //RecyclerView
    compile recyclerview
    // constraint // 约束布局
    compile constraint
    // Network Framework
    compile retrofit
    compile converter_gson
    compile retrofit2_rxjava2_adapter
    compile okhttp_logging_interceptor
    compile okhttp
    // Image Loader Framework
    compile glide
    compile glide_okhttp3
    // Reactive Programming Codeing Framework
    compile rxandroid
    compile rxjava
    // Google Support Lib
    compile rootProject.ext.support_dependencies["v7"]
    compile rootProject.ext.support_dependencies["v4"]
    compile rootProject.ext.support_dependencies["design"]
    compile rootProject.ext.support_dependencies["appcompat_v7"]
    compile rootProject.ext.support_dependencies["multidex"]

    // Test Framework
    testCompile junit
    debugCompile logutils_debug
    releaseCompile logutils_release
    testCompile logutils_debug
    debugCompile leakcanary_debug
    releaseCompile leakcanary_release
    testCompile leakcanary_test
    //kotlin
    //compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile kotlin7
    //test frameWork
    testCompile junit
    debugCompile logutils_debug
    releaseCompile logutils_release
    testCompile logutils_debug
    debugCompile leakcanary_debug
    releaseCompile leakcanary_release
    testCompile leakcanary_test
    //将添加到libs中的jar 添加到项目中, 不过更加便捷的方式是 在一个modual中
    compile open_sdk
    compile fastjson_sdk
    // 将modual添加进来 才能真正的使用
    // local sdk
    compile h_sdk
    compile s_sdk
}
repositories {
    mavenCentral()
}
